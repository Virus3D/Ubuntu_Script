#!/bin/bash

# ========================================================
# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—è –≤–µ–±‚Äë—Å—Ä–µ–¥—ã –¥–ª—è Symfony –∏ Bitrix24
# Ubuntu 25.10 | –ü–æ–¥–¥–æ–º–µ–Ω—ã localhost | PHP-–≤–µ—Ä—Å–∏—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
# –ê–≤—Ç–æ—Ä: –í–∞—à –ò–º—è
# –î–∞—Ç–∞: 2025-10-29
# ========================================================

set -e  # –ü—Ä–µ–∫—Ä–∞—â–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# --- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã ---
PHP_VERSION="8.4"           # –ú–µ–Ω—è–π—Ç–µ –∑–¥–µ—Å—å: 8.2, 8.4 –∏ —Ç. –ø.
WEB_ROOT="/var/www"            # –ö–æ—Ä–µ–Ω—å –≤–µ–±‚Äë–ø—Ä–æ–µ–∫—Ç–æ–≤
NGINX_CONF="/etc/nginx/sites-available"
NGINX_ENABLED="/etc/nginx/sites-enabled"

echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—è –≤–µ–±‚Äë—Å—Ä–µ–¥—ã –¥–ª—è Symfony/Bitrix24..."
echo "PHP –≤–µ—Ä—Å–∏—è: $PHP_VERSION | –í–µ–±‚Äë–∫–æ—Ä–µ–Ω—å: $WEB_ROOT"

# --- –§—É–Ω–∫—Ü–∏–∏ ---
package_installed() {
    dpkg -l "$1" 2>/dev/null | grep -q "^ii"
}

dir_exists() {
    [ -d "$1" ]
}

# --- 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã ---
echo "üîÅ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
sudo apt update && sudo apt upgrade -y && sudo apt dist-upgrade -y
sudo apt autoremove -y && sudo apt clean

# --- 2. –ë–∞–∑–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (–µ—Å–ª–∏ –Ω–µ—Ç) ---
echo "üõ† –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ —É—Ç–∏–ª–∏—Ç—ã..."
BASE_TOOLS=(mc curl wget git vim unzip zip htop net-tools)
for tool in "${BASE_TOOLS[@]}"; do
    if ! package_installed "$tool"; then
        sudo apt install -y "$tool"
    else
        echo "$tool —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚úÖ"
    fi
done

# --- 3. Nginx (–µ—Å–ª–∏ –Ω–µ—Ç) ---
echo "üåê –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Nginx..."
if ! package_installed "nginx"; then
    sudo apt install -y nginx
    sudo systemctl enable nginx
else
    echo "Nginx —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚úÖ"
fi
sudo systemctl restart nginx

if sudo systemctl is-active --quiet nginx; then
    echo "Nginx –∑–∞–ø—É—â–µ–Ω ‚úÖ"
else
    echo "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Nginx! ‚ùå"
    exit 1
fi

# --- 4. MariaDB (–µ—Å–ª–∏ –Ω–µ—Ç) ---
echo "üóÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MariaDB..."
if ! package_installed "mariadb-server"; then
    sudo apt install -y mariadb-server
    sudo systemctl enable mariadb
    sudo systemctl start mariadb
else
    echo "MariaDB —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚úÖ"
fi
echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ 'sudo mysql_secure_installation' –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."

# --- 5. PHP –∏ –º–æ–¥—É–ª–∏ (—Å –≤–µ—Ä—Å–∏–µ–π –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π) ---
echo "‚öôÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PHP $PHP_VERSION –∏ –º–æ–¥—É–ª–∏..."
PHP_PACKAGES=(
    "php$PHP_VERSION-fpm" "php$PHP_VERSION-cli" "php$PHP_VERSION-mysql"
    "php$PHP_VERSION-gd" "php$PHP_VERSION-xml" "php$PHP_VERSION-mbstring"
    "php$PHP_VERSION-curl" "php$PHP_VERSION-zip" "php$PHP_VERSION-bcmath"
    "php$PHP_VERSION-intl" "php$PHP_VERSION-opcache"
)
for pkg in "${PHP_PACKAGES[@]}"; do
    if ! package_installed "$pkg"; then
        sudo apt install -y "$pkg"
    else
        echo "$pkg —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚úÖ"
    fi
done

sudo systemctl enable "php$PHP_VERSION-fpm"
sudo systemctl start "php$PHP_VERSION-fpm"
php -v

# --- 6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ Nginx ---
echo "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –ø–æ–¥–¥–æ–º–µ–Ω—ã *.localhost..."

# 6.1. –î–æ–±–∞–≤–ª—è–µ–º –≤–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö *.conf –∏–∑ sites-enabled
NGINX_MAIN_CONF="/etc/nginx/nginx.conf"
if ! grep -q "include sites-enabled/\*.conf;" "$NGINX_MAIN_CONF"; then
    sudo sed -i '/http {/a \    include sites-enabled/*.conf;' "$NGINX_MAIN_CONF"
    echo "–î–æ–±–∞–≤–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–∏–≤–∞ include –≤ nginx.conf ‚úÖ"
fi

# 6.2. –°–æ–∑–¥–∞—ë–º —à–∞–±–ª–æ–Ω –∫–æ–Ω—Ñ–∏–≥–∞
cat > "$NGINX_TEMPLATE" << 'EOF'
server {
    listen 80;
    server_name $PROJECT_NAME.localhost;

    root $PROJECT_ROOT;
    index index.php;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass unix:/run/php/php$PHP_VERSION-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        internal;
    }

    location ~ \.php$ {
        return 404;
    }

    location ~ /\.ht {
        deny all;
    }

    error_log /var/log/nginx/$PROJECT_NAME.error.log;
    access_log /var/log/nginx/$PROJECT_NAME.access.log;
}
EOF

# 6.3. –°–æ–∑–¥–∞—ë–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
CREATE_SCRIPT="/usr/local/bin/create-web-project"
cat > "$CREATE_SCRIPT" << 'EOF'
#!/bin/bash

PROJECT_NAME="$1"
PROJECT_TYPE="$2"  # symfony | bitrix

if [ -z "$PROJECT_NAME" ]; then
    echo "–û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞. –ü—Ä–∏–º–µ—Ä: create-web-project mysite symfony"
    exit 1
fi

WEB_ROOT="/var/www"
PROJECT_DIR="$WEB_ROOT/$PROJECT_NAME"
CONF_FILE="/etc/nginx/sites-available/$PROJECT_NAME.conf"
LINK_FILE="/etc/nginx/sites-enabled/$PROJECT_NAME.conf"

# –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
sudo mkdir -p "$PROJECT_DIR"
sudo chown -R www-data:www-data "$PROJECT_DIR"
sudo chmod -R 755 "$PROJECT_DIR"

# –í—ã–±–∏—Ä–∞–µ–º —à–∞–±–ª–æ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
if [ "$PROJECT_TYPE" == "bitrix" ]; then
    cat > "$CONF_FILE" << EOF2
server {
    listen 80;
    server_name $PROJECT_NAME.localhost;

    root $PROJECT_DIR;
    index index.php;

    location / {
        try_files \$uri \$uri/ /bitrix/urlrewrite.php?\$args;
    }

    location ~ \.php$ {
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
        fastcgi_index index.php;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
    }

    location ~ /\.ht {
        deny all;
    }

    error_log /var/log/nginx/$PROJECT_NAME.error.log;
    access_log /var/log/nginx/$PROJECT_NAME.access.log;
}
EOF2
else  # Symfony –∏–ª–∏ –æ–±—â–∏–π —à–∞–±–ª–æ–Ω
    cp /etc/nginx/sites-available/template.conf "$CONF_FILE"
    sed -i "s/\$PROJECT_NAME/$PROJECT_NAME/g" "$CONF_FILE"
    sed -i "s/\$PROJECT_ROOT/$PROJECT_DIR/g" "$CONF_FILE"
    sed -i "s/\$PHP_VERSION/8.3/g" "$CONF_FILE"
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥ (—Å–æ–∑–¥–∞—ë–º —Å–∏–º–ª–∏–Ω–∫)
sudo ln -sf "$CONF_FILE" "$LINK_FILE"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Nginx
if sudo nginx -t; then
    sudo systemctl reload nginx
    echo "–ü—Ä–æ–µ–∫—Ç $PROJECT_NAME —Å–æ–∑–¥–∞–Ω! –î–æ—Å—Ç—É–ø: http://$PROJECT_NAME.localhost"
else
    echo "–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª $CONF_FILE"
    exit 1
fi
EOF

# –î–∞—ë–º –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
sudo chmod +x /usr/local/bin/create-web-project

# --- 7. Composer (–µ—Å–ª–∏ –Ω–µ—Ç) ---
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Composer..."
if ! command -v composer &> /dev/null; then
    curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer
else
    echo "Composer —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚úÖ"
fi
composer --version

# --- 8. Node.js –∏ npm (–µ—Å–ª–∏ –Ω–µ—Ç) ---
echo "üÜï –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js (LTS) –∏ npm..."
if ! command -v node &> /dev/null || ! command -v npm &> /dev/null; then
    curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
    sudo apt install -y nodejs
else
    echo "Node.js –∏ npm —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ‚úÖ"
fi
node -v
npm -v

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ Nginx
if sudo nginx -t; then
    sudo systemctl reload nginx
    echo "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã ‚úÖ"
else
    echo "–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx! ‚ùå"
    exit 1
fi

# --- 7. Composer (–µ—Å–ª–∏ –Ω–µ—Ç) ---
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Composer..."
if ! command -v composer &> /dev/null; then
    curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer
else
    echo "Composer —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚úÖ"
fi
composer --version

# --- 8. Node.js –∏ npm (–µ—Å–ª–∏ –Ω–µ—Ç) ---
echo "üÜï –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js (LTS) –∏ npm..."
if ! command -v node &> /dev/null || ! command -v npm &> /dev/null; then
    curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
    sudo apt install -y nodejs
else
    echo "Node.js –∏ npm —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ‚úÖ"
fi
node -v
npm -v

echo "‚úÖ –†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É: –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ http://–≤–∞—à-—Å–µ—Ä–≤–µ—Ä/info.php"
echo "–î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–∏—Ç–µ info.php –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏: sudo rm /var/www/html/info.php"
